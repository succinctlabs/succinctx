// AUTOGENERATED: DO NOT TOUCH
package main

import (
	"flag"
	"fmt"

	"github.com/ethereum/go-ethereum/common/hexutil"
	"github.com/succinctlabs/sdk/gnarkx/succinct"
)

func main() {
	proveFlag := flag.Bool("prove", false, "prove the circuit")
	inputBytesString := flag.String("input", "", "input bytes to prove with 0x prefix")
	initFlag := flag.Bool("init", false, "initialize the circuit")
	flag.Parse()

	if *initFlag {
		fmt.Println("Scaffold files been successfully generated.")
		return
	}

	if !*proveFlag && !*initFlag {
		printHelp()
		return
	}

	circuit := succinct.NewCircuitFunction(NewCircuit())

	if *proveFlag {
		fmt.Println("proving circuit, assuming artifacts are already built")
		inputBytes, err := hexutil.Decode(*inputBytesString)
		if err != nil {
			fmt.Println("Failed to decode input bytes:", err)
			return
		}
		circuit.Prove(inputBytes)
		return
	}

	fmt.Println("compiling and building circuit artifacts")
	circuit.Build()
}

func printHelp() {
	fmt.Println("Usage:")
	fmt.Println("  succinct init - initialize the circuit")
}
